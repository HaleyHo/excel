{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fswiss\fcharset0 ArialMT;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red251\green2\blue7;\red255\green255\blue255;\red62\green62\blue62;
\red85\green142\blue40;\red115\green0\blue2;\red244\green246\blue249;\red0\green0\blue117;\red18\green139\blue2;
\red11\green84\blue83;}
{\*\expandedcolortbl;;\cssrgb\c100000\c14913\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c30980\c30980\c30980;
\cssrgb\c39975\c61335\c20601;\cssrgb\c53333\c0\c0;\cssrgb\c96471\c97255\c98039;\cssrgb\c0\c0\c53333;\cssrgb\c0\c60000\c0;
\cssrgb\c0\c40000\c40000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13500\viewh10320\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 """\

\f1 \'b9\'a6\'c4\'dc\'a3\'ba\'cd\'a8\'b9\'fd\'b4\'f2\'bf\'aa\'d2\'bb\'b8\'f6\'ce\'c4\'bc\'fe\'b6\'d4\'bb\'b0\'b4\'b0\'bf\'da\'c0\'b4\'d1\'a1\'d4\'f1\'ce\'c4\'bc\'fe\'a3\'ac\'bb\'f1\'b5\'c3\'ce\'c4\'bc\'fe\'c2\'b7\'be\'b6\'a3\'a8\'b0\'fc\'ba\'ac\'ce\'c4\'bc\'fe\'c3\'fb\'ba\'cd\'ba\'f3\'d7\'ba\'a3\'a9
\f0 \

\f1 \'ca\'b1\'bc\'e4\'a3\'ba
\f0 2017
\f1 \'c4\'ea
\f0 3
\f1 \'d4\'c2
\f0 10
\f1 \'c8\'d5
\f0  15:40:06\
"""\
\
import os\
import tkFileDialog\
\
default_dir = r"C:\\Users\\lenovo\\Desktop"  # 
\f1 \'c9\'e8\'d6\'c3\'c4\'ac\'c8\'cf\'b4\'f2\'bf\'aa\'c4\'bf\'c2\'bc
\f0 \
fname = tkFileDialog.askopenfilename(title=u"
\f1 \'d1\'a1\'d4\'f1\'ce\'c4\'bc\'fe
\f0 ",\
                                     initialdir=(os.path.expanduser(default_dir)))\
\
print fname  # 
\f1 \'b7\'b5\'bb\'d8\'ce\'c4\'bc\'fe\'c8\'ab\'c2\'b7\'be\'b6
\f0 \
print tkFileDialog.askdirectory()  # 
\f1 \'b7\'b5\'bb\'d8\'c4\'bf\'c2\'bc\'c2\'b7\'be\'b6\
\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\'a1\'aa\
\pard\pardeftab720\sl360\partightenfactor0

\f2 \cf2 \cb3 \expnd0\expndtw0\kerning0
tkFileDialog
\f1 \'d3\'d0\'c1\'bd\'d6\'d6\'d0\'ce\'ca\'bd
\f2\fs32 \cf4 :\'a0\

\f1 \'d2\'bb\'b8\'f6\'ca\'c7
\f2 .askopenfilename(option=value, \'85) 
\f1 \'d5\'e2\'b8\'f6\'ca\'c7
\f2 \'94
\f1 \'b4\'f2\'bf\'aa
\f2 \'94
\f1 \'b6\'d4\'bb\'b0\'bf\'f2
\f2 \'a0\

\f1 \'c1\'ed\'d2\'bb\'b8\'f6\'ca\'c7
\f2 :asksaveasfilename(option=value, \'85) 
\f1 \'d5\'e2\'b8\'f6\'ca\'c7\'c1\'ed\'b4\'e6\'ce\'aa\'b6\'d4\'bb\'b0\'bf\'f2\

\f2 \cf5 option
\f1 \'b2\'ce\'ca\'fd\cf4 \'c8\'e7\'cf\'c2
\f2 :\'a0\
defaultextension = s 
\f1 \'c4\'ac\'c8\'cf\'ce\'c4\'bc\'fe\'b5\'c4\'c0\'a9\'d5\'b9\'c3\'fb
\f2 \'a0\
filetypes = [(label1, pattern1), (label2, pattern2), \'85] 
\f1 \'c9\'e8\'d6\'c3\'ce\'c4\'bc\'fe\'c0\'e0\'d0\'cd\'cf\'c2\'c0\'ad\'b2\'cb\'b5\'a5\'c0\'ef\'b5\'c4\'b5\'c4\'d1\'a1\'cf\'ee
\f2 \'a0\
initialdir = D 
\f1 \'b6\'d4\'bb\'b0\'bf\'f2\'d6\'d0\'c4\'ac\'c8\'cf\'b5\'c4\'c2\'b7\'be\'b6
\f2 \'a0\
initialfile = F 
\f1 \'b6\'d4\'bb\'b0\'bf\'f2\'d6\'d0\'b3\'f5\'ca\'bc\'bb\'af\'cf\'d4\'ca\'be\'b5\'c4\'ce\'c4\'bc\'fe\'c3\'fb
\f2 \'a0\
parent = W 
\f1 \'b8\'b8\'b6\'d4\'bb\'b0\'bf\'f2
\f2 (
\f1 \'d3\'c9\'c4\'c4\'b8\'f6\'b4\'b0\'bf\'da\'b5\'af\'b3\'f6\'be\'cd\'d4\'da\'c4\'c4\'b8\'f6\'c9\'cf\'b6\'cb
\f2 )\'a0\
title = T 
\f1 \'b5\'af\'b3\'f6\'b6\'d4\'bb\'b0\'bf\'f2\'b5\'c4\'b1\'ea\'cc\'e2
\f2 \'a0\
#example\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab720\sl320\partightenfactor0

\i\fs28 \cf6 \cb1 #coding=UTF-8  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \

\f2\i \AppleTypeServices \cf6 \cb1 # __author__ = '
\f1\i0 \'bc\'ab\'d6\'c2
\f2\i '  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
\

\f2 \AppleTypeServices \cf8 \cb1 import
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  Tkinter, Tkconstants, tkFileDialog  \
\

\f2 \AppleTypeServices \cf8 \cb1 class\cf4  TkFileDialogExample(Tkinter.Frame):
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cb7   \
\
    
\f2 \AppleTypeServices \cf8 \cb1 def\cf4  \cf9 __init__\cf4 (self, root):
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cb7   \
\
        Tkinter.Frame.__init__(self, root)  \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # options for buttons  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        button_opt = \{
\f2 \AppleTypeServices \cf9 \cb1 'fill'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 : Tkconstants.BOTH, 
\f2 \AppleTypeServices \cf9 \cb1 'padx'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 : 
\f2 \AppleTypeServices \cf10 \cb1 5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , 
\f2 \AppleTypeServices \cf9 \cb1 'pady'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 : 
\f2 \AppleTypeServices \cf10 \cb1 5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \}  \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # define buttons  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        Tkinter.Button(self, text=
\f2 \AppleTypeServices \cf9 \cb1 'askopenfile'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , command=self.askopenfile).pack(**button_opt)  \
        Tkinter.Button(self, text=
\f2 \AppleTypeServices \cf9 \cb1 'askopenfilename'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , command=self.askopenfilename).pack(**button_opt)  \
        Tkinter.Button(self, text=
\f2 \AppleTypeServices \cf9 \cb1 'asksaveasfile'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , command=self.asksaveasfile).pack(**button_opt)  \
        Tkinter.Button(self, text=
\f2 \AppleTypeServices \cf9 \cb1 'asksaveasfilename'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , command=self.asksaveasfilename).pack(**button_opt)  \
        Tkinter.Button(self, text=
\f2 \AppleTypeServices \cf9 \cb1 'askdirectory'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , command=self.askdirectory).pack(**button_opt)  \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # define options for opening or saving a file  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        self.file_opt = options = \{\}  \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'defaultextension'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = 
\f2 \AppleTypeServices \cf9 \cb1 '.txt'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'filetypes'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = [(
\f2 \AppleTypeServices \cf9 \cb1 'all files'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , 
\f2 \AppleTypeServices \cf9 \cb1 '.*'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ), (
\f2 \AppleTypeServices \cf9 \cb1 'text files'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , 
\f2 \AppleTypeServices \cf9 \cb1 '.txt'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 )]  \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'initialdir'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = 
\f2 \AppleTypeServices \cf9 \cb1 'C:\\\\'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'initialfile'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = 
\f2 \AppleTypeServices \cf9 \cb1 'myfile.txt'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'parent'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = root  \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'title'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = 
\f2 \AppleTypeServices \cf9 \cb1 'This is a title'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # This is only available on the Macintosh, and only when Navigation Services are installed.  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        
\f2\i \AppleTypeServices \cf6 \cb1 #options['message'] = 'message'  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # if you use the multiple file version of the module functions this option is set automatically.  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        
\f2\i \AppleTypeServices \cf6 \cb1 #options['multiple'] = 1  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # defining options for opening a directory  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        self.dir_opt = options = \{\}  \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'initialdir'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = 
\f2 \AppleTypeServices \cf9 \cb1 'C:\\\\'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'mustexist'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = 
\f2 \AppleTypeServices \cf8 \cb1 False
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'parent'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = root  \
        options[
\f2 \AppleTypeServices \cf9 \cb1 'title'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 ] = 
\f2 \AppleTypeServices \cf9 \cb1 'This is a title'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
\
    
\f2 \AppleTypeServices \cf8 \cb1 def\cf4  \cf9 askopenfile\cf4 (self):
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cb7   \
\
        
\f2 \AppleTypeServices \cf9 \cb1 """Returns an opened file in read mode."""
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
\
        
\f2 \AppleTypeServices \cf8 \cb1 return
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  tkFileDialog.askopenfile(mode=
\f2 \AppleTypeServices \cf9 \cb1 'r'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , **self.file_opt)  \
\
    
\f2 \AppleTypeServices \cf8 \cb1 def\cf4  \cf9 askopenfilename\cf4 (self):
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cb7   \
\
        
\f2 \AppleTypeServices \cf9 \cb1 """Returns an opened file in read mode. \
        This time the dialog just returns a filename and the file is opened by your own code. \
        """
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # get filename  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        filename = tkFileDialog.askopenfilename(**self.file_opt)  \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # open file on your own  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        
\f2 \AppleTypeServices \cf8 \cb1 if
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  filename:  \
            
\f2 \AppleTypeServices \cf8 \cb1 return
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  open(filename, 
\f2 \AppleTypeServices \cf9 \cb1 'r'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 )  \
\
    
\f2 \AppleTypeServices \cf8 \cb1 def\cf4  \cf9 asksaveasfile\cf4 (self):
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cb7   \
\
        
\f2 \AppleTypeServices \cf9 \cb1 """Returns an opened file in write mode."""
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
\
        
\f2 \AppleTypeServices \cf8 \cb1 return
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  tkFileDialog.asksaveasfile(mode=
\f2 \AppleTypeServices \cf9 \cb1 'w'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 , **self.file_opt)  \
\
    
\f2 \AppleTypeServices \cf8 \cb1 def\cf4  \cf9 asksaveasfilename\cf4 (self):
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cb7   \
\
        
\f2 \AppleTypeServices \cf9 \cb1 """Returns an opened file in write mode. \
        This time the dialog just returns a filename and the file is opened by your own code. \
        """
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # get filename  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        filename = tkFileDialog.asksaveasfilename(**self.file_opt)  \
\
        
\f2\i \AppleTypeServices \cf6 \cb1 # open file on your own  
\f3\i0 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 \
        
\f2 \AppleTypeServices \cf8 \cb1 if
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  filename:  \
            
\f2 \AppleTypeServices \cf8 \cb1 return
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  open(filename, 
\f2 \AppleTypeServices \cf9 \cb1 'w'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 )  \
\
    
\f2 \AppleTypeServices \cf8 \cb1 def\cf4  \cf9 askdirectory\cf4 (self):
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cb7   \
\
        
\f2 \AppleTypeServices \cf9 \cb1 """Returns a selected directoryname."""
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7   \
\
        
\f2 \AppleTypeServices \cf8 \cb1 return
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  tkFileDialog.askdirectory(**self.dir_opt)  \
\

\f2 \AppleTypeServices \cf8 \cb1 if
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7  __name__ == 
\f2 \AppleTypeServices \cf9 \cb1 '__main__'
\f3 \AppleTypeServices\AppleTypeServicesF65538 \cf4 \cb7 :  \
    root = Tkinter.Tk()  \
    TkFileDialogExample(root).pack()  \
    root.mainloop()  \
\
\
Tkinter
\f1 \AppleTypeServices \'ca\'c7
\f3 \AppleTypeServices\AppleTypeServicesF65538 python
\f1 \AppleTypeServices \'b5\'c4\'c4\'ac\'c8\'cf
\f3 \AppleTypeServices\AppleTypeServicesF65538 GUI
\f1 \AppleTypeServices \'bf\'e2
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
1.Button 
\f1 \AppleTypeServices \'b0\'b4\'c5\'a5\'a3\'ba\'c0\'e0\'cb\'c6\'b1\'ea\'c7\'a9
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'b5\'ab\'cc\'e1\'b9\'a9\'b6\'ee\'cd\'e2\'b5\'c4\'b9\'a6\'c4\'dc
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
# 
\f1 \AppleTypeServices \'ca\'f3\'b1\'ea\'d7\'f3\'bc\'fc
\f3 \AppleTypeServices\AppleTypeServicesF65538 <Button-1>\
# 
\f1 \AppleTypeServices \'ca\'f3\'b1\'ea\'d3\'d2\'bc\'fc
\f3 \AppleTypeServices\AppleTypeServicesF65538 <Button-3>\
# 
\f1 \AppleTypeServices \'ca\'f3\'b1\'ea\'d6\'d0\'bc\'fc
\f3 \AppleTypeServices\AppleTypeServicesF65538 <Button-2>\
# <Double-Button-2>
\f1 \AppleTypeServices \'ca\'f3\'b1\'ea\'d6\'d0\'bd\'a8\'cb\'ab\'bb\'f7
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# <Triple-Button-1>
\f1 \AppleTypeServices \'ca\'f3\'b1\'ea\'d7\'f3\'bc\'fc\'c8\'fd\'bb\'f7
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
1\
2\
3\
4\
5\
2.Label 
\f1 \AppleTypeServices \'b1\'ea\'c7\'a9\'a3\'ba\'d3\'c3\'c0\'b4\'cf\'d4\'ca\'be\'ce\'c4\'d7\'d6\'bb\'f2\'cd\'bc\'c6\'ac
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'d3\'d0\'b1\'ed\'b8\'f1\'b2\'bc\'be\'d6\'a1\'a2\'cf\'e0\'b6\'d4\'b2\'bc\'be\'d6\'a1\'a2\'be\'f8\'b6\'d4\'b2\'bc\'be\'d6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
(1)
\f1 \AppleTypeServices \'be\'f8\'b6\'d4\'b2\'bc\'be\'d6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
label1 = tkinter.Label(win, text="good", bg="pink")\
label2 = tkinter.Label(win, text="nice", bg="blue")\
label3 = tkinter.Label(win, text="cool", bg="red")\
# 
\f1 \AppleTypeServices \'be\'f8\'b6\'d4\'b2\'bc\'be\'d6\'a3\'ac\'b4\'b0\'bf\'da\'b5\'c4\'b1\'e4\'bb\'af\'ce\'bb\'d6\'c3\'c3\'bb\'d3\'d0\'d3\'b0\'cf\'ec
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
label1.place(x=10, y=10)\
label2.place(x=50, y=50)\
label3.place(x=100, y=100)\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
\
(2)
\f1 \AppleTypeServices \'cf\'e0\'b6\'d4\'b2\'bc\'be\'d6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
label1 = tkinter.Label(win, text="good", bg="pink")\
label2 = tkinter.Label(win, text="nice", bg="blue")\
label3 = tkinter.Label(win, text="cool", bg="red")\
# 
\f1 \AppleTypeServices \'cf\'e0\'b6\'d4\'b2\'bc\'be\'d6\'a3\'ac\'b4\'b0\'cc\'e5\'b8\'c4\'b1\'e4\'b6\'d4\'bf\'d8\'bc\'fe\'d3\'d0\'d3\'b0\'cf\'ec
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# tkinter.BOTH
\f1 \AppleTypeServices \'d3\'eb
\f3 \AppleTypeServices\AppleTypeServicesF65538 fill=tkinter.Y
\f1 \AppleTypeServices \'c0\'e0\'cb\'c6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
label1.pack(fill=tkinter.Y, side=tkinter.LEFT)\
label2.pack(fill=tkinter.X, side=tkinter.TOP)\
label3.pack()\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
\
(3)
\f1 \AppleTypeServices \'b1\'ed\'b8\'f1\'b2\'bc\'be\'d6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
label1 = tkinter.Label(win, text="good", bg="pink")\
label2 = tkinter.Label(win, text="nice", bg="blue")\
label3 = tkinter.Label(win, text="cool", bg="red")\
label4 = tkinter.Label(win, text="head", bg="yellow")\
\
label1.grid(row=1, column=1)\
label2.grid(row=1, column=0)\
label3.grid(row=0, column=1)\
label4.grid(row=0, column=0)\
\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
\
3.Scale 
\f1 \AppleTypeServices \'bd\'f8\'b6\'c8\'cc\'f5\'a3\'ba\'cf\'df\'d0\'d4
\f3 \AppleTypeServices\AppleTypeServicesF65538 \'93
\f1 \AppleTypeServices \'bb\'ac\'bf\'e9
\f3 \AppleTypeServices\AppleTypeServicesF65538 \'94
\f1 \AppleTypeServices \'d7\'e9\'bc\'fe
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'bf\'c9\'c9\'e8\'b6\'a8\'c6\'f0\'ca\'bc\'d6\'b5\'ba\'cd\'bd\'e1\'ca\'f8\'d6\'b5
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'bb\'e1\'cf\'d4\'ca\'be\'b5\'b1\'c7\'b0\'ce\'bb\'d6\'c3\'b5\'c4\'be\'ab\'c8\'b7\'d6\'b5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
#Label Scale Button
\f1 \AppleTypeServices \'d7\'db\'ba\'cf
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
from tkinter import *\
def resize(event=None):\
    label.config(font="Helvetica -%d bold" % \\\
                      scale.get())\
top = Tk()\
top.geometry("250x150")\
label = Label(top, text="Hello world", font="Helvetica -12 bold")\
label.pack(fill=Y, expand=1)\
scale = Scale(top, from_="10", to="40", orient=HORIZONTAL,\
              command=resize)\
scale.set(12)\
scale.pack(fill=X, expand=1)\
quit = Button(top, text="QUIT",\
              command=top.quit,\
              activeforeground="white",\
              activebackground="red")\
quit.pack()\
mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
\
\
4.Canvas 
\f1 \AppleTypeServices \'bb\'ad\'b2\'bc\'a3\'ba\'cc\'e1\'b9\'a9\'bb\'e6\'cd\'bc\'b9\'a6\'c4\'dc\'a3\'ac\'bf\'c9\'d2\'d4\'b0\'fc\'ba\'ac\'cd\'bc\'d0\'ce\'bb\'f2\'ce\'bb\'cd\'bc
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
5.Checkbutton
\f1 \AppleTypeServices \'a3\'ba\'d2\'bb\'d7\'e9\'b7\'bd\'bf\'f2
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'bf\'c9\'d2\'d4\'d1\'a1\'d4\'f1\'c6\'e4\'d6\'d0\'b5\'c4\'c8\'ce\'d2\'e2\'b8\'f6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
#
\f1 \AppleTypeServices \'b8\'b4\'d1\'a1\'bf\'f2
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
import tkinter\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
def updata():\
    message = ""\
    if hobby1.get() == True:\
        message += "money\\n"\
    if hobby2.get() == True:\
        message += "power\\n"\
    if hobby3.get() == True:\
        message += "mpeople\\n"\
        # 
\f1 \AppleTypeServices \'c7\'e5\'b3\'fd
\f3 \AppleTypeServices\AppleTypeServicesF65538 text
\f1 \AppleTypeServices \'b5\'c4\'cb\'f9\'d3\'d0\'c4\'da\'c8\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
	text.delete(0.0, tkinter.END)\
	text.insert(tkinter.INSERT, message)\
hobby1 = tkinter.BooleanVar()\
check1 = tkinter.Checkbutton(win, text="money", variable=hobby1, command=updata)\
check1.pack()\
hobby2 = tkinter.BooleanVar()\
check2 = tkinter.Checkbutton(win, text="power", variable=hobby2, command=updata)\
check2.pack()\
hobby3 = tkinter.BooleanVar()\
check3 = tkinter.Checkbutton(win, text="people", variable=hobby3, command=updata)\
check3.pack()\
text = tkinter.Text(win, width=50, height=5)\
text.pack()\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
25\
26\
27\
28\
\
6.Entry 
\f1 \AppleTypeServices \'ce\'c4\'b1\'be\'bf\'f2\'a3\'ba\'b5\'a5\'d0\'d0\'ce\'c4\'d7\'d6\'d3\'f2
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'d3\'c3\'c0\'b4\'ca\'d5\'bc\'af\'bc\'fc\'c5\'cc\'ca\'e4\'c8\'eb
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
7.Frame
\f1 \AppleTypeServices \'a3\'ba\'bf\'f2\'bc\'dc\'bf\'f2\'bc\'dc\'bf\'d8\'bc\'fe\'a3\'ac\'d4\'da\'c6\'c1\'c4\'bb\'c9\'cf\'cf\'d4\'ca\'be\'d2\'bb\'b8\'f6\'be\'d8\'d0\'ce\'c7\'f8\'d3\'f2\'a3\'ac\'b6\'e0\'d7\'f7\'ce\'aa\'c8\'dd\'c6\'f7\'bf\'d8\'bc\'fe
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
\
frm = tkinter.Frame(win)\
frm.pack()\
# left\
frm_1 = tkinter.Frame(frm)\
\
tkinter.Label(frm_1, text="
\f1 \AppleTypeServices \'d7\'f3\'c9\'cf
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", bg="pink").pack(\
    side=tkinter.TOP)\
tkinter.Label(frm_1, text="
\f1 \AppleTypeServices \'d7\'f3\'cf\'c2
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", bg="blue").pack(\
    side=tkinter.TOP)\
frm_1.pack(side=tkinter.LEFT)\
\
# right\
frm_r = tkinter.Frame(frm)\
\
tkinter.Label(frm_r, text="
\f1 \AppleTypeServices \'d3\'d2\'c9\'cf
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", bg="red").pack(\
    side=tkinter.TOP)\
tkinter.Label(frm_r, text="
\f1 \AppleTypeServices \'d3\'d2\'cf\'c2
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", bg="yellow").pack(\
    side=tkinter.TOP)\
frm_r.pack(side=tkinter.RIGHT)\
\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
25\
26\
27\
\
\
8.Listbox 
\f1 \AppleTypeServices \'c1\'d0\'b1\'ed\'bf\'f2\'a3\'ba\'d2\'bb\'b8\'f6\'d1\'a1\'cf\'ee\'c1\'d0\'b1\'ed
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'d3\'c3\'bb\'a7\'bf\'c9\'d2\'d4\'b4\'d3\'d6\'d0\'d1\'a1\'d4\'f1
\f3 \AppleTypeServices\AppleTypeServicesF65538 \

\f1 \AppleTypeServices \'d7\'f7\'d3\'c3\'a3\'ba\'d4\'da
\f3 \AppleTypeServices\AppleTypeServicesF65538 listbox
\f1 \AppleTypeServices \'bf\'d8\'bc\'fe\'b5\'c4\'d0\'a1\'b4\'b0\'bf\'da\'cf\'d4\'ca\'be\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
# 
\f1 \AppleTypeServices \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6
\f3 \AppleTypeServices\AppleTypeServicesF65538 listbox
\f1 \AppleTypeServices \'a3\'ac\'cc\'ed\'bc\'d3\'bc\'b8\'b8\'f6\'d4\'aa\'cb\'d8
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# SINGLE
\f1 \AppleTypeServices \'d3\'eb
\f3 \AppleTypeServices\AppleTypeServicesF65538 BORWSE
\f1 \AppleTypeServices \'c0\'e0\'cb\'c6\'a3\'ac\'b5\'ab\'ca\'c7\'b2\'bb\'d6\'a7\'b3\'d6\'ca\'f3\'b1\'ea\'d2\'c6\'b6\'af\'d1\'a1\'d6\'d0\'ce\'bb\'d6\'c3
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
lb = tkinter.Listbox(win, selectmode=tkinter.BROWSE)\
lb.pack()\
for item in ["good", "nice", "handsome", "cool"]:\
    # 
\f1 \AppleTypeServices \'b0\'b4\'cb\'b3\'d0\'f2\'cc\'ed\'bc\'d3
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
    lb.insert(tkinter.END, item)\
# 
\f1 \AppleTypeServices \'d4\'da\'bf\'aa\'ca\'bc\'cc\'ed\'bc\'d3
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# 
\f1 \AppleTypeServices \'bd\'ab\'c1\'d0\'b1\'ed\'b5\'b1\'b3\'c9\'d4\'aa\'cb\'d8\'cc\'ed\'bc\'d3
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# 
\f1 \AppleTypeServices \'c9\'be\'b3\'fd
\f3 \AppleTypeServices\AppleTypeServicesF65538   
\f1 \AppleTypeServices \'b2\'ce\'ca\'fd
\f3 \AppleTypeServices\AppleTypeServicesF65538 1
\f1 \AppleTypeServices \'ce\'aa\'bf\'aa\'ca\'bc\'b5\'c4\'cb\'f7\'d2\'fd\'a3\'ac\'b2\'ce\'ca\'fd
\f3 \AppleTypeServices\AppleTypeServicesF65538 2
\f1 \AppleTypeServices \'ce\'aa\'bd\'e1\'ca\'f8\'b5\'c4\'cb\'f7\'d2\'fd\'a3\'ac
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# 
\f1 \AppleTypeServices \'c8\'e7\'b9\'fb\'b2\'bb\'d6\'b8\'b6\'a8\'b2\'ce\'ca\'fd
\f3 \AppleTypeServices\AppleTypeServicesF65538 2
\f1 \AppleTypeServices \'a3\'ac\'d6\'bb\'c9\'be\'b3\'fd\'b5\'da\'d2\'bb\'b8\'f6\'cb\'f7\'d2\'fd\'b5\'c4\'c4\'da\'c8\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
lb.insert(tkinter.ACTIVE, "cool")\
lb.insert(tkinter.END, ["very good ", "very nice"])\
# lb.delete(1, 3)\
lb.select_set(2, 5)\
# 
\f1 \AppleTypeServices \'c8\'a1\'cf\'fb
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# lb.select_clear(2, 4)\
# 
\f1 \AppleTypeServices \'bb\'f1\'c8\'a1\'b5\'bd\'c1\'d0\'b1\'ed\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'b5\'c4\'b8\'f6\'ca\'fd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# print(lb.size())\
# 
\f1 \AppleTypeServices \'b4\'d3\'c1\'d0\'b1\'ed\'d6\'d0\'c8\'a1\'d6\'b5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# print(lb.get(2, 4))\
# 
\f1 \AppleTypeServices \'b7\'b5\'bb\'d8\'b5\'b1\'c7\'b0\'b5\'c4\'cb\'f7\'d2\'fd\'cf\'ee\'a3\'ac\'b2\'bb\'ca\'c7
\f3 \AppleTypeServices\AppleTypeServicesF65538 item
\f1 \AppleTypeServices \'d4\'aa\'cb\'d8
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
print(lb.curselection())\
# 
\f1 \AppleTypeServices \'c5\'d0\'b6\'cf
\f3 \AppleTypeServices\AppleTypeServicesF65538  
\f1 \AppleTypeServices \'d2\'bb\'b8\'f6\'d1\'a1\'cf\'ee\'ca\'c7\'b7\'f1\'b1\'bb\'d1\'a1\'d6\'d0
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
print(lb.select_includes(1))\
print(lb.select_includes(3))\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
25\
26\
27\
28\
29\
30\
31\
\
\
import tkinter\
win = tkinter.Tk()\
win.title("sunk")\
# win.geometry("400x400+200+20")\
# EXTENDED 
\f1 \AppleTypeServices \'bf\'c9\'d2\'d4\'ca\'b9
\f3 \AppleTypeServices\AppleTypeServicesF65538 listbox
\f1 \AppleTypeServices \'d6\'a7\'b3\'d6
\f3 \AppleTypeServices\AppleTypeServicesF65538 shift
\f1 \AppleTypeServices \'ba\'cd
\f3 \AppleTypeServices\AppleTypeServicesF65538 ctrl\
# MULTIPLE
\f1 \AppleTypeServices \'d6\'a7\'b3\'d6\'b6\'e0\'d1\'a1
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
lb = tkinter.Listbox(win, selectmode=tkinter.EXTENDED)\
# lb.pack()\
for item in ["good", "nice", "handsome", "vg", "vn",\
             "good2", "nice3", "handsome4", "vg5", "vn4",\
            "good3", "nice4", "handsome44", "vg5", "vn6"\
             ]:\
    lb.insert(tkinter.END, item)\
# 
\f1 \AppleTypeServices \'b0\'b4\'d7\'a1
\f3 \AppleTypeServices\AppleTypeServicesF65538 shift
\f1 \AppleTypeServices \'a3\'ac\'bf\'c9\'d2\'d4\'ca\'b5\'cf\'d6\'c1\'ac\'d1\'a1
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# 
\f1 \AppleTypeServices \'b0\'b4\'d7\'a1
\f3 \AppleTypeServices\AppleTypeServicesF65538 ctrl
\f1 \AppleTypeServices \'a3\'ac\'bf\'c9\'d2\'d4\'ca\'b5\'cf\'d6\'b6\'e0\'d1\'a1
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# 
\f1 \AppleTypeServices \'bc\'d3\'b9\'f6\'b6\'af\'cc\'f5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
sc = tkinter.Scrollbar(win)\
sc.pack(side=tkinter.RIGHT, fill=tkinter.Y)\
lb.configure(yscrollcommand=sc.set)\
lb.pack(side=tkinter.LEFT, fill=tkinter.BOTH)\
sc['command'] = lb.yview()\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
\
9.Menu 
\f1 \AppleTypeServices \'b2\'cb\'b5\'a5\'a3\'ba\'b5\'e3\'cf\'c2\'b2\'cb\'b5\'a5\'b0\'b4\'c5\'a5\'ba\'f3\'b5\'af\'b3\'f6\'b5\'c4\'d2\'bb\'b8\'f6\'d1\'a1\'cf\'ee\'c1\'d0\'b1\'ed
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'d3\'c3\'bb\'a7\'bf\'c9\'d2\'d4\'b4\'d3\'d6\'d0\'d1\'a1\'d4\'f1
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
(1)
\f1 \AppleTypeServices \'b2\'cb\'b5\'a5\'c0\'b8
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
\
\
def func():\
    print("sunk is a good man ")\
\
\
# 
\f1 \AppleTypeServices \'b2\'cb\'b5\'a5\'cc\'f5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
menubar = tkinter.Menu(win)\
win.config(menu=menubar)\
# 
\f1 \AppleTypeServices \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'b2\'cb\'b5\'a5\'d1\'a1\'cf\'ee
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
menu1 = tkinter.Menu(menubar, tearoff=False)\
# 
\f1 \AppleTypeServices \'b8\'f8\'b2\'cb\'b5\'a5\'d1\'a1\'cf\'ee\'cc\'ed\'bc\'d3\'c4\'da\'c8\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
for item in ["Python", "c", "c++", "OC",\
             "SWITFG", "JAVA", "PHP", "JS"]:\
    if item == "
\f1 \AppleTypeServices \'cd\'cb\'b3\'f6
\f3 \AppleTypeServices\AppleTypeServicesF65538 ":\
        # 
\f1 \AppleTypeServices \'cc\'ed\'bc\'d3\'b7\'d6\'b8\'ee\'cf\'df
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
        menu1.add_separator()\
        menu1.add_command(label=item, command=win.quit)\
    else:\
        menu1.add_command(label=item, command=func)\
\
# 
\f1 \AppleTypeServices \'cc\'ed\'bc\'d3\'b2\'cb\'b5\'a5\'d1\'a1\'cf\'ee
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
menubar.add_cascade(label="
\f1 \AppleTypeServices \'d3\'ef\'d1\'d4
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", menu=menu1)\
menu2 = tkinter.Menu(menubar, tearoff=False)\
menu2.add_command(label="red")\
menu2.add_command(label="blue")\
menubar.add_cascade(label="
\f1 \AppleTypeServices \'d1\'d5\'c9\'ab
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", menu=menu2)\
\
win.mainloop()\
\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
25\
26\
27\
28\
29\
30\
31\
32\
33\
34\
35\
36\
\
(2)
\f1 \AppleTypeServices \'ca\'f3\'b1\'ea\'d3\'d2\'bc\'fc\'b2\'cb\'b5\'a5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
\
# 
\f1 \AppleTypeServices \'b2\'cb\'b5\'a5\'cc\'f5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
menubar = tkinter.Menu(win)\
# 
\f1 \AppleTypeServices \'b2\'cb\'b5\'a5
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
# 
\f1 \AppleTypeServices \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'b2\'cb\'b5\'a5\'d1\'a1\'cf\'ee
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
menu = tkinter.Menu(menubar, tearoff=False)\
# 
\f1 \AppleTypeServices \'b8\'f8\'b2\'cb\'b5\'a5\'d1\'a1\'cf\'ee\'cc\'ed\'bc\'d3\'c4\'da\'c8\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
for item in ["Python", "c", "c++", "OC",\
             "SWITFG", "JAVA", "PHP", "JS"]:\
    menu.add_command(label=item)\
\
menubar.add_cascade(label="
\f1 \AppleTypeServices \'d3\'ef\'d1\'d4
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", menu=menu)\
\
\
def showMenu(event):\
    menubar.post(event.x_root, event.y_root)\
\
\
win.bind("<Button-3>", showMenu)\
\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
25\
26\
\
10.Menubutton
\f1 \AppleTypeServices \'a3\'ba\'b2\'cb\'b5\'a5\'b0\'b4\'c5\'a5\'a1\'a3\'d3\'c3\'c0\'b4\'b0\'fc\'ba\'ac\'b2\'cb\'b5\'a5\'b5\'c4\'d7\'e9\'bc\'fe
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
11.Message 
\f1 \AppleTypeServices \'cf\'fb\'cf\'a2\'bf\'f2\'a1\'a3\'c0\'e0\'cb\'c6\'d3\'da\'b1\'ea\'c7\'a9
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'b5\'ab\'bf\'c9\'d2\'d4\'cf\'d4\'ca\'be\'b6\'e0\'d0\'d0\'ce\'c4\'b1\'be
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
12.Radiobutton 
\f1 \AppleTypeServices \'b5\'a5\'d1\'a1\'b0\'b4\'c5\'a5\'a3\'ba\'d2\'bb\'d7\'e9\'b0\'b4\'c5\'a5
\f3 \AppleTypeServices\AppleTypeServicesF65538 ,
\f1 \AppleTypeServices \'c6\'e4\'d6\'d0\'d6\'bb\'d3\'d0\'d2\'bb\'b8\'f6\'bf\'c9\'b1\'bb
\f3 \AppleTypeServices\AppleTypeServicesF65538 \'93
\f1 \AppleTypeServices \'b0\'b4\'cf\'c2
\f3 \AppleTypeServices\AppleTypeServicesF65538 \'94\
\
"""\

\f1 \AppleTypeServices \'b5\'a5\'d1\'a1\'bf\'f2
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
"""\
import tkinter\
\
\
def updata():\
    print(r.get())\
\
\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
\
#
\f1 \AppleTypeServices \'d2\'bb\'d7\'e9\'b5\'a5\'d1\'a1\'bf\'f2\'b0\'f3\'b6\'a8\'d2\'bb\'b8\'f6\'b1\'e4\'c1\'bf
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
r = tkinter.IntVar()\
radio1 = tkinter.Radiobutton(win, text="one ", value=1,\
                             variable=r, command=updata)\
radio1.pack()\
radio2 = tkinter.Radiobutton(win, text="2222 ", value=2,\
                             variable=r, command=updata)\
radio2.pack()\
\
win.mainloop()\
\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
25\
\
13.Scrollbar 
\f1 \AppleTypeServices \'b9\'f6\'b6\'af\'cc\'f5\'a1\'a3\'b6\'d4\'c6\'e4\'d6\'a7\'b3\'d6\'b5\'c4\'d7\'e9\'bc\'fe\'b0\'fc\'c0\'a8\'ce\'c4\'b1\'be\'d3\'f2\'a1\'a2\'bb\'ad\'b2\'bc\'a1\'a2\'c1\'d0\'b1\'ed\'bf\'f2\'a1\'a2\'ce\'c4\'b1\'be\'bf\'f2\'a3\'ac\'cc\'e1\'b9\'a9\'b9\'f6\'b6\'af\'b9\'a6\'c4\'dc
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
14.ttk
\f1 \AppleTypeServices \'b5\'c4\'ba\'dc\'b6\'e0\'d7\'e9\'bc\'fe\'cd\'ac
\f3 \AppleTypeServices\AppleTypeServicesF65538 Tkinter
\f1 \AppleTypeServices \'b6\'bc\'ca\'c7\'cf\'e0\'cd\'ac\'b5\'c4\'a3\'ac\'d4\'da\'d5\'e2\'d6\'d6\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac
\f3 \AppleTypeServices\AppleTypeServicesF65538 ttk
\f1 \AppleTypeServices \'bd\'ab\'b8\'b2\'b8\'c7
\f3 \AppleTypeServices\AppleTypeServicesF65538 Tkinter
\f1 \AppleTypeServices \'b5\'c4\'d7\'e9\'bc\'fe\'a3\'ac\'bd\'ab\'b2\'c9\'d3\'c3
\f3 \AppleTypeServices\AppleTypeServicesF65538 ttk
\f1 \AppleTypeServices \'b5\'c4\'cc\'d8\'d0\'d4
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
(1)
\f1 \AppleTypeServices \'cf\'c2\'c0\'ad\'ca\'fd\'be\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
from tkinter import ttk\
\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
cv = tkinter.StringVar()\
com = ttk.Combobox(win, )\
com.pack()\
# 
\f1 \AppleTypeServices \'c9\'e8\'d6\'c3\'cf\'c2\'c0\'ad\'ca\'fd\'be\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
com["value"] = ("
\f1 \AppleTypeServices \'ba\'da\'c1\'fa\'bd\'ad
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", "
\f1 \AppleTypeServices \'bc\'aa\'c1\'d6
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", "
\f1 \AppleTypeServices \'c1\'c9\'c4\'fe
\f3 \AppleTypeServices\AppleTypeServicesF65538 ")\
com.current(0)\
\
\
# 
\f1 \AppleTypeServices \'b0\'f3\'b6\'a8\'ca\'c2\'bc\'fe
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
def func(event):\
    print("sunck is a good man ")\
    print(com.get())\
    print(cv.get())\
\
\
com.bind("<<ComboboxSelected>>", func)\
win.mainloop()\
\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
\
(2)
\f1 \AppleTypeServices \'b1\'ed\'b8\'f1\'ca\'fd\'be\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
from tkinter import ttk\
\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
# 
\f1 \AppleTypeServices \'b1\'ed\'b8\'f1
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
tree = ttk.Treeview(win)\
tree.pack()\
# 
\f1 \AppleTypeServices \'b6\'a8\'d2\'e5\'c1\'d0
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
tree["columns"] = ("
\f1 \AppleTypeServices \'d0\'d5\'c3\'fb
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", "
\f1 \AppleTypeServices \'c9\'ed\'b8\'df
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", "
\f1 \AppleTypeServices \'cc\'e5\'d6\'d8
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", "
\f1 \AppleTypeServices \'c4\'ea\'c1\'e4
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", "
\f1 \AppleTypeServices \'d0\'d4\'b1\'f0
\f3 \AppleTypeServices\AppleTypeServicesF65538 ")\
\
# 
\f1 \AppleTypeServices \'c9\'e8\'d6\'c3\'c1\'d0\'a3\'ac\'c1\'d0\'bb\'b9\'b2\'bb\'cf\'d4\'ca\'be
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
tree.column("
\f1 \AppleTypeServices \'d0\'d5\'c3\'fb
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", width=100)\
tree.column("
\f1 \AppleTypeServices \'c9\'ed\'b8\'df
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", width=100)\
tree.column("
\f1 \AppleTypeServices \'cc\'e5\'d6\'d8
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", width=100)\
tree.column("
\f1 \AppleTypeServices \'c4\'ea\'c1\'e4
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", width=100)\
tree.column("
\f1 \AppleTypeServices \'d0\'d4\'b1\'f0
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", width=100)\
# 
\f1 \AppleTypeServices \'c9\'e8\'d6\'c3\'b1\'ed\'cd\'b7
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
tree.heading("
\f1 \AppleTypeServices \'d0\'d5\'c3\'fb
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d0\'d5\'c3\'fb
\f3 \AppleTypeServices\AppleTypeServicesF65538 -name")\
tree.heading("
\f1 \AppleTypeServices \'c9\'ed\'b8\'df
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'c9\'ed\'b8\'df
\f3 \AppleTypeServices\AppleTypeServicesF65538 -height")\
tree.heading("
\f1 \AppleTypeServices \'cc\'e5\'d6\'d8
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'cc\'e5\'d6\'d8
\f3 \AppleTypeServices\AppleTypeServicesF65538 -weight")\
tree.heading("
\f1 \AppleTypeServices \'c4\'ea\'c1\'e4
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'c4\'ea\'c1\'e4
\f3 \AppleTypeServices\AppleTypeServicesF65538 -age")\
tree.heading("
\f1 \AppleTypeServices \'d0\'d4\'b1\'f0
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d0\'d4\'b1\'f0
\f3 \AppleTypeServices\AppleTypeServicesF65538 -gender")\
# 
\f1 \AppleTypeServices \'cc\'ed\'bc\'d3\'ca\'fd\'be\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
tree.insert("", 0, text="line1", values=("1", "2", "3", "4", "5"))\
tree.insert("", 0, text="line2", values=("6", "7", "8", "9", "10"))\
tree.insert("", 0, text="line3", values=("11", "12", "13", "14", "15"))\
tree.insert("", 0, text="line4", values=("16", "17", "18", "19", "20"))\
\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
25\
26\
27\
28\
29\
30\
31\
\
(3)
\f1 \AppleTypeServices \'ca\'f7\'d7\'b4\'ca\'fd\'be\'dd
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
\
import tkinter\
from tkinter import ttk\
\
win = tkinter.Tk()\
win.title("sunk")\
win.geometry("400x400+200+20")\
\
tree = ttk.Treeview(win)\
tree.pack()\
# 
\f1 \AppleTypeServices \'cc\'ed\'bc\'d3\'d2\'bb\'bc\'b6\'ca\'f7\'d6\'a6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
treeF1 = tree.insert("", 0, "
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa
\f3 \AppleTypeServices\AppleTypeServicesF65538 CHA", values=("F1"))\
treeF2 = tree.insert("", 1, "
\f1 \AppleTypeServices \'c3\'c0\'b9\'fa
\f3 \AppleTypeServices\AppleTypeServicesF65538  ", text="
\f1 \AppleTypeServices \'c3\'c0\'b9\'fa
\f3 \AppleTypeServices\AppleTypeServicesF65538 USA", values=("F2"))\
treeF4 = tree.insert("", 2, "
\f1 \AppleTypeServices \'d3\'a2\'b9\'fa
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d3\'a2\'b9\'fa
\f3 \AppleTypeServices\AppleTypeServicesF65538 UK", values=("F3"))\
\
# 
\f1 \AppleTypeServices \'b6\'fe\'bc\'b6\'ca\'f7\'d6\'a6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
treeF1_1 = tree.insert(treeF1, 0, "
\f1 \AppleTypeServices \'ba\'da\'c1\'fa\'bd\'ad
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa\'ba\'da\'c1\'fa\'bd\'ad
\f3 \AppleTypeServices\AppleTypeServicesF65538 ",\
                       values=("F1_1"))\
treeF1_2 = tree.insert(treeF1, 1, "
\f1 \AppleTypeServices \'bc\'aa\'c1\'d6
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa\'bc\'aa\'c1\'d6
\f3 \AppleTypeServices\AppleTypeServicesF65538 ",\
                       values=("F1_2"))\
treeF1_3 = tree.insert(treeF1, 2, "
\f1 \AppleTypeServices \'c1\'c9\'c4\'fe
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa\'c1\'c9\'c4\'fe
\f3 \AppleTypeServices\AppleTypeServicesF65538 ",\
                       values=("F1_3"))\
\
treeF2_1 = tree.insert(treeF2, 0, "
\f1 \AppleTypeServices \'d6\'d8\'c7\'ec
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa\'d6\'d8\'c7\'ec
\f3 \AppleTypeServices\AppleTypeServicesF65538 ",\
                       values=("F1_1"))\
treeF2_2 = tree.insert(treeF2, 1, "
\f1 \AppleTypeServices \'ba\'a3\'c4\'cf
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa\'ba\'a3\'c4\'cf
\f3 \AppleTypeServices\AppleTypeServicesF65538 ",\
                       values=("F1_2"))\
treeF2_3 = tree.insert(treeF2, 2, "
\f1 \AppleTypeServices \'b9\'e3\'b6\'ab
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa\'b9\'e3\'b6\'ab
\f3 \AppleTypeServices\AppleTypeServicesF65538 ",\
                       values=("F1_3"))\
\
# 
\f1 \AppleTypeServices \'c8\'fd\'bc\'b6\'ca\'f7\'d6\'a6
\f3 \AppleTypeServices\AppleTypeServicesF65538 \
treeF1_1_1 = tree.insert(treeF1_1, 0, "
\f1 \AppleTypeServices \'b9\'fe\'b6\'fb\'b1\'f5\'ca\'d0
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa\'b9\'fe\'b6\'fb\'b1\'f5\'ca\'d0
\f3 \AppleTypeServices\AppleTypeServicesF65538 ")\
treeF1_1_2 = tree.insert(treeF1_1, 1, "
\f1 \AppleTypeServices \'b9\'e3\'d6\'dd\'ca\'d0
\f3 \AppleTypeServices\AppleTypeServicesF65538 ", text="
\f1 \AppleTypeServices \'d6\'d0\'b9\'fa\'b9\'e3\'d6\'dd\'ca\'d0
\f3 \AppleTypeServices\AppleTypeServicesF65538 ")\
win.mainloop()\
1\
2\
3\
4\
5\
6\
7\
8\
9\
10\
11\
12\
13\
14\
15\
16\
17\
18\
19\
20\
21\
22\
23\
24\
25\
26\
27\
28\
29\
30\
31\
32\
33\
\
}